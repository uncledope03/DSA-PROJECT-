Prompts the user to enter new details for the selected contact,
checks for uniqueness, and updates the contact if valid.

// Data Structure Used: ArrayList<Contact>

 private void updateContact() {
    Contact selectedContact = contactList.getSelectedValue();
    if (selectedContact != null) {
        String newName = JOptionPane.showInputDialog(frame, "Edit Name:", selectedContact.getName());
        String newPhone = JOptionPane.showInputDialog(frame, "Edit Phone:", selectedContact.getPhone());
        if (newName != null && newPhone != null) {
            if (isUniqueContact(newName, newPhone)) {
                selectedContact.setName(newName);  // Updates the contact's name
                selectedContact.setPhone(newPhone);  // Updates the contact's phone
                contactList.setListData(contacts.toArray(new Contact[0]));
                JOptionPane.showMessageDialog(frame, "Contact updated successfully.");
            } else {
                JOptionPane.showMessageDialog(frame, "Contact with the same name or phone number already exists.");
            }
        }
    } else {
        JOptionPane.showMessageDialog(frame, "Please select a contact to update.");
    }
}
 
pseudocode representation of the above code


METHOD UpdateContact(selectedContact)
    IF selectedContact IS NOT NULL THEN
        PROMPT user for newName and newPhone
        IF newName AND newPhone are NOT NULL THEN
            IF IsUniqueContact(newName, newPhone) THEN
                SET selectedContact's name to newName
                SET selectedContact's phone to newPhone
                DISPLAY "Contact updated successfully"
            ELSE
                DISPLAY "Contact with the same name or phone number already exists"
            END IF
        END IF
    ELSE
        DISPLAY "Please select a contact to update"
    END IF
END METHOD
